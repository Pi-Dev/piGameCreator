#############################################################################
# Makefile for building: cppengine
# Generated by qmake (2.01a) (Qt 4.8.0) on: ?? 15. ??? 05:35:46 2012
# Project:  cppengine.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_LARGEFILE_SUPPORT -DGLEW_STATIC -DFREEGLUT_STATIC
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\freeglut" -I"..\glew\include" -I"..\glew\lib" -I"..\boost" -I"..\freeglut\include" -I"..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -Wl,-s -mthreads
LIBS        =        ../freeglut/lib/libfreeglut32_static.a ../glew/lib/libglew32.a -lglu32 -lopengl32 -luser32 -lgdi32 -lkernel32 -lwinmm -static-libgcc 
QMAKE         = p:\cpp\qt\desktop\qt\4.8.0\mingw\bin\qmake.exe
IDC           = p:\CPP\Qt\Desktop\Qt\4.8.0\mingw\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = application.cpp \
		color.cpp \
		draw.cpp \
		exception.cpp \
		function.cpp \
		game.cpp \
		gcArray.cpp \
		gcObject.cpp \
		gcString.cpp \
		geometryShader.cpp \
		globals.cpp \
		graph.cpp \
		graphicsEffect.cpp \
		layer.cpp \
		light.cpp \
		lightSettings.cpp \
		lightVolume.cpp \
		object.cpp \
		objectRepresentation.cpp \
		path.cpp \
		physicsSettings.cpp \
		physicsSimulator.cpp \
		pixelShader.cpp \
		point.cpp \
		rectangle.cpp \
		scene.cpp \
		sceneGraph.cpp \
		timer.cpp \
		transition.cpp \
		vertexShader.cpp \
		window.cpp \
		gcstring\bstrwrap.cpp \
		gcstring\bstrlib.c \
		gcstring\bstraux.c \
		gcstring\bsafe.c 
OBJECTS       = release/application.o \
		release/color.o \
		release/draw.o \
		release/exception.o \
		release/function.o \
		release/game.o \
		release/gcArray.o \
		release/gcObject.o \
		release/gcString.o \
		release/geometryShader.o \
		release/globals.o \
		release/graph.o \
		release/graphicsEffect.o \
		release/layer.o \
		release/light.o \
		release/lightSettings.o \
		release/lightVolume.o \
		release/object.o \
		release/objectRepresentation.o \
		release/path.o \
		release/physicsSettings.o \
		release/physicsSimulator.o \
		release/pixelShader.o \
		release/point.o \
		release/rectangle.o \
		release/scene.o \
		release/sceneGraph.o \
		release/timer.o \
		release/transition.o \
		release/vertexShader.o \
		release/window.o \
		release/bstrwrap.o \
		release/bstrlib.o \
		release/bstraux.o \
		release/bsafe.o
DIST          = 
QMAKE_TARGET  = cppengine
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = cppengine.exe
DESTDIR_TARGET = release\cppengine.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.cppengine.Release  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\win32-g++ -o Makefile.Release cppengine.pro

dist:
	$(ZIP) cppengine.zip $(SOURCES) $(DIST) cppengine.pro ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\qconfig.pri ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\modules\qt_webkit_version.pri ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\qt_functions.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\qt_config.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\exclusive_builds.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\default_pre.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\win32\default_pre.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\release.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\debug_and_release.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\default_post.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\win32\default_post.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\build_pass.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\win32\rtti.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\win32\exceptions.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\win32\stl.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\shared.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\warn_on.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\win32\thread_off.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\resources.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\uic.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\yacc.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\lex.prf ..\..\Qt\Desktop\Qt\4.8.0\mingw\mkspecs\features\include_source_dir.prf  RESOURCES FORMS IMAGES YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\application.o release\color.o release\draw.o release\exception.o release\function.o release\game.o release\gcArray.o release\gcObject.o release\gcString.o release\geometryShader.o release\globals.o release\graph.o release\graphicsEffect.o release\layer.o release\light.o release\lightSettings.o release\lightVolume.o release\object.o release\objectRepresentation.o release\path.o release\physicsSettings.o release\physicsSimulator.o release\pixelShader.o release\point.o release\rectangle.o release\scene.o release\sceneGraph.o release\timer.o release\transition.o release\vertexShader.o release\window.o release\bstrwrap.o release\bstrlib.o release\bstraux.o release\bsafe.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/application.o: application.cpp application.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\application.o application.cpp

release/color.o: color.cpp color.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h \
		globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\color.o color.cpp

release/draw.o: draw.cpp draw.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\draw.o draw.cpp

release/exception.o: exception.cpp exception.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h \
		globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\exception.o exception.cpp

release/function.o: function.cpp function.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\function.o function.cpp

release/game.o: game.cpp application.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h \
		timer.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\game.o game.cpp

release/gcArray.o: gcArray.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gcArray.o gcArray.cpp

release/gcObject.o: gcObject.cpp gcObject.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gcObject.o gcObject.cpp

release/gcString.o: gcString.cpp globals.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gcString.o gcString.cpp

release/geometryShader.o: geometryShader.cpp geometryShader.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\geometryShader.o geometryShader.cpp

release/globals.o: globals.cpp globals.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\globals.o globals.cpp

release/graph.o: graph.cpp graph.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\graph.o graph.cpp

release/graphicsEffect.o: graphicsEffect.cpp graphicsEffect.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\graphicsEffect.o graphicsEffect.cpp

release/layer.o: layer.cpp layer.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h \
		globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\layer.o layer.cpp

release/light.o: light.cpp light.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\light.o light.cpp

release/lightSettings.o: lightSettings.cpp lightSettings.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\lightSettings.o lightSettings.cpp

release/lightVolume.o: lightVolume.cpp lightVolume.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\lightVolume.o lightVolume.cpp

release/object.o: object.cpp object.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\object.o object.cpp

release/objectRepresentation.o: objectRepresentation.cpp objectRepresentation.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h \
		globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\objectRepresentation.o objectRepresentation.cpp

release/path.o: path.cpp path.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\path.o path.cpp

release/physicsSettings.o: physicsSettings.cpp physicsSettings.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\physicsSettings.o physicsSettings.cpp

release/physicsSimulator.o: physicsSimulator.cpp physicsSimulator.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\physicsSimulator.o physicsSimulator.cpp

release/pixelShader.o: pixelShader.cpp pixelShader.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\pixelShader.o pixelShader.cpp

release/point.o: point.cpp point.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\point.o point.cpp

release/rectangle.o: rectangle.cpp rectangle.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rectangle.o rectangle.cpp

release/scene.o: scene.cpp scene.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h \
		globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\scene.o scene.cpp

release/sceneGraph.o: sceneGraph.cpp sceneGraph.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sceneGraph.o sceneGraph.cpp

release/timer.o: timer.cpp timer.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\timer.o timer.cpp

release/transition.o: transition.cpp transition.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\transition.o transition.cpp

release/vertexShader.o: vertexShader.cpp vertexShader.h \
		pgframework.h \
		gcArray.h \
		globals.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\vertexShader.o vertexShader.cpp

release/window.o: window.cpp window.h \
		pgframework.h \
		gcArray.h \
		gcString.h \
		gcstring/bstrwrap.h \
		gcstring/bstrlib.h \
		globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\window.o window.cpp

release/bstrwrap.o: gcstring/bstrwrap.cpp gcstring/bstrwrap.h \
		gcstring/bstrlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\bstrwrap.o gcstring\bstrwrap.cpp

release/bstrlib.o: gcstring/bstrlib.c gcstring/bstrlib.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\bstrlib.o gcstring\bstrlib.c

release/bstraux.o: gcstring/bstraux.c gcstring/bstrlib.h \
		gcstring/bstraux.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\bstraux.o gcstring\bstraux.c

release/bsafe.o: gcstring/bsafe.c gcstring/bsafe.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\bsafe.o gcstring\bsafe.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

